name: 'Run bootc image VM with Ignition'
description: 'A generic workflow to launch a bootc image VM configured with Butane/Ignition and optional post-install steps.'

inputs:
  registry:
    description: 'Registry for the image. Example: ghcr.io/secureblue'
    required: true
  image:
    description: 'Image name for the VM. Example: silverblue-main-hardened'
    required: true
  vm-name:
    description: 'Name for the virtual machine and its disk in libvirt.'
    default: 'vm-bootc'
    required: false
  vcpus:
    description: 'Number of virtual CPUs for the VM. Must be less than the runner CPUs.'
    default: 3
    required: false
  memory-mb:
    description: 'Amount of RAM in MB for the VM. Must be less than the runner memory.'
    default: 8192
    required: false
  disk-size-gb:
    description: 'Size (in GB) of the virtual machine disk. Must be less than runner disk space.'
    default: 10
    required: false
  butane-version:
    description: 'Version of Butane tool to install.'
    default: 'v0.24.0'
    required: false
  butane-spec-version:
    description: 'Version of the Butane/Ignition spec to use in the config file.'
    default: '1.6.0'
    required: false
  vm-ip:
    description: 'Static IP address for the VM on the default 192.168.122.0/24 network.'
    default: '192.168.122.2'
    required: false
  vm-interface:
    description: 'Network interface inside the VM to configure (e.g., enp1s0).'
    default: 'enp1s0'
    required: false
  vm-dns-servers:
    description: 'Semicolon-separated list of DNS servers for the VM.'
    default: '1.1.1.1;1.0.0.1'
    required: false
  startup-wait-seconds:
    description: 'Time in seconds to wait after VM startup. Recommended: 180 for complex setups.'
    default: 180
    required: false
  tests:
    description: 'List of test scripts to execute on the VM via SSH after it boots. Exit code determines test status.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
    
    - name: 'Install Dependencies'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system-x86 libvirt-daemon-system libvirt-clients virtinst podman apparmor-utils wget

    - name: 'Configure Libvirt and AppArmor'
      shell: bash
      run: |
        echo 'owner "/var/lib/libvirt/boot/**" r,' | sudo tee -a /etc/apparmor.d/abstractions/libvirt-qemu
        sudo apparmor_parser -r /etc/apparmor.d/usr.sbin.libvirtd
        sudo systemctl restart libvirtd
        sudo usermod -aG kvm,libvirt "$USER"

    - name: 'Install Butane'
      shell: bash
      env:
        BUTANE_VERSION: ${{ inputs.butane-version }}
      run: |
        URL="https://github.com/coreos/butane/releases/download/${BUTANE_VERSION}/butane-x86_64-unknown-linux-gnu"
        wget -q "${URL}" -O /tmp/butane
        chmod +x /tmp/butane
        sudo mv /tmp/butane /usr/local/bin/butane

    - name: Generate SSH Keypair
      shell: bash
      run: |
        mkdir -p ~/.ssh
        ssh-keygen -t ed25519 -N "" -f ~/.ssh/id_ed25519

    - name: 'Create Ignition Config'
      shell: bash
      env:
        VM_DNS_SERVERS: ${{ inputs.vm-dns-servers }}
        VM_INTERFACE: ${{ inputs.vm-interface }}
        VM_IP: ${{ inputs.vm-ip }}
        BUTANE_SPEC_VERSION: ${{ inputs.butane-spec-version }}
      run: |
        IGNITION_DIR="/var/lib/libvirt/boot"
        IGNITION_FILE="${IGNITION_DIR}/config.ign"
        sudo mkdir -p "${IGNITION_DIR}"
        SSH_PUBLIC_KEY=$(cat ~/.ssh/id_ed25519.pub)

        DNS_FORMATTED=$(echo "${VM_DNS_SERVERS}" | tr ';' ',')

        cat <<EOF > config.bu
        variant: fcos
        version: ${BUTANE_SPEC_VERSION}
        passwd:
          users:
            - name: core
              ssh_authorized_keys:
                - "${SSH_PUBLIC_KEY}"
        storage:
          files:
            - path: /etc/NetworkManager/system-connections/static.nmconnection
              mode: 0600
              contents:
                inline: |
                  [connection]
                  id=static-${VM_INTERFACE}
                  type=ethernet
                  interface-name=${VM_INTERFACE}
                  [ipv4]
                  method=manual
                  addresses=${VM_IP}/24
                  gateway=192.168.122.1
                  dns=\${DNS_FORMATTED}
                  [ipv6]
                  method=disabled
        EOF

        sudo butane --pretty --strict config.bu | sudo tee "${IGNITION_FILE}" > /dev/null
        sudo chown libvirt-qemu:kvm "${IGNITION_FILE}"
        sudo chmod 644 "${IGNITION_FILE}"

    - name: 'Download FCOS Image'
      id: download_image
      shell: bash
      run: |
        DOWNLOAD_DIR="/tmp"
        IMAGE_FILENAME=$(basename "$(sudo podman run --pull=always --rm -v "${DOWNLOAD_DIR}:/data" -w /data \
          quay.io/coreos/coreos-installer:release download -s testing -p qemu -f qcow2.xz --decompress)")
        TEMP_IMAGE_PATH="${DOWNLOAD_DIR}/${IMAGE_FILENAME}"
        echo "image_path=${TEMP_IMAGE_PATH}" >> $GITHUB_OUTPUT

    - name: 'Create and Start VM'
      shell: bash
      env:
        DISK_SIZE_GB: ${{ inputs.disk-size-gb }}
        IMAGE_PATH: ${{ steps.download_image.outputs.image_path }}
        VM_NAME: ${{ inputs.vm-name }}
        VCPU: ${{ inputs.vcpus }}
        MEMORY_MB: ${{ inputs.memory-mb }}
      run: |
        IGNITION_CONFIG="/var/lib/libvirt/boot/config.ign"
        IGNITION_DEVICE_ARG=(--qemu-commandline="-fw_cfg name=opt/com.coreos/config,file=${IGNITION_CONFIG}")
        sudo virt-install \
          --connect="qemu:///system" \
          --name="${VM_NAME}" \
          --vcpus="${VCPU}" \
          --memory="${MEMORY_MB}" \
          --os-variant="fedora-coreos-testing" \
          --import \
          --graphics=none \
          --disk="size=${DISK_SIZE_GB},backing_store=${IMAGE_PATH}" \
          --network network=default \
          "${IGNITION_DEVICE_ARG[@]}" \
          --noautoconsole

    - name: 'Wait for VM Startup'
      if: ${{ inputs.startup-wait-seconds > 0 }}
      env:
        STARTUP_WAIT_SECONDS: ${{ inputs.startup-wait-seconds }}
      shell: bash
      run: |
        echo "Waiting ${STARTUP_WAIT_SECONDS} seconds for the VM to start..."
        sleep ${STARTUP_WAIT_SECONDS}
    
    - name: 'Rebase'
      shell: bash
      env:
        VM_IP: ${{ inputs.vm-ip }}
        REGISTRY: ${{ inputs.registry }}
        IMAGE: ${{ inputs.image }}
      run: |
        echo "Waiting for SSH port to be open on ${VM_IP}..."
        for i in {1..30}; do nc -z ${VM_IP} 22 && break || sleep 5; done

        ssh-keyscan -H "${VM_IP}" >> ~/.ssh/known_hosts
        ssh -o ConnectTimeout=20 -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 core@${VM_IP} sudo rpm-ostree rebase --bypass-driver "ostree-image-signed:docker://${REGISTRY}/${IMAGE}:latest" && reboot

    - name: 'Run Post-Install Commands'
      shell: bash
      env:
        VM_IP: ${{ inputs.vm-ip }}
        TESTS: ${{ inputs.tests }}
      run: |
        echo "Running tests..."
        mkdir test-logs
        IFS=$'\n' read -d '' -r -a TEST_LIST <<< "$TESTS"


        FAILED_TESTS=0
        SSH_OPTS="-o ConnectTimeout=20 -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519"

        for TEST_FILE in "${TEST_LIST[@]}"; do
          echo "Running test: $TEST_FILE"
          BASENAME=$(basename "$TEST_FILE")
          REMOTE_PATH="/home/core/${BASENAME}"
          LOG_FILE="test-logs/${BASENAME}.log"

          scp $SSH_OPTS "$TEST_FILE" core@$VM_IP:"$REMOTE_PATH"
          ssh $SSH_OPTS core@$VM_IP "chmod +x $REMOTE_PATH && $REMOTE_PATH" > "$LOG_FILE" 2>&1
          TEST_EXIT_CODE=$?
          if [[ $TEST_EXIT_CODE -ne 0 ]]; then
            echo "Test $TEST_FILE failed"
            (( FAILED_TESTS++ ))
          fi
        done

        if [[ $FAILED_TESTS -gt 0 ]]; then
          exit 1
        fi

    - name: Upload Test Logs
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: test-logs
        path: test-logs/
        retention-days: 7